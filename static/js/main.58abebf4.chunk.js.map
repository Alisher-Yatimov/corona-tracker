{"version":3,"sources":["utils/fetchData.js","components/Header/Header.js","components/Card/Card.js","components/LineChart/LineChart.js","components/ListOfCountries/ListOfCountries.js","components/BarChart/BarChart.js","App.js","index.js","components/Header/Header.module.css"],"names":["fetchData","url","a","fetch","response","json","data","Header","className","styles","header","useStyles","makeStyles","root","minWidth","media","height","Cards","name","val","border","classes","Card","style","borderBottom","CardContent","Typography","gutterBottom","variant","component","toUpperCase","color","toLocaleString","dataForChart","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","Chart","useState","labels","setLabels","confirmed","setConfirmed","deaths","setDeaths","useEffect","map","reportDate","totalConfirmed","total","getDailyData","options","maintainAspectRatio","ListOfCountries","selectHandler","currentCountry","countries","setCountries","arrOfCountries","el","getData","Grid","container","spacing","direction","alignItems","justify","item","xs","InputLabel","id","textAlign","Select","value","labelId","onChange","MenuItem","key","idx","chartOptions","responsive","scales","yAxes","ticks","suggestedMin","BarChart","recovered","setRecovered","console","log","App","setCorfimed","setCurrentCountry","localStorage","getItem","e","preventDefault","target","setItem","Container","toLowerCase","LineChart","mainData","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.58abebf4.chunk.js","sourcesContent":["export const fetchData = async (url) => {\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    return data\r\n}","import React from 'react'\r\nimport styles from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={styles.header}>\r\n            <h1>corona virus tracker</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 300  \r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst Cards = ({name, val, border}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root} style={{borderBottom: `2px solid ${border}`}}>\r\n\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {name.toUpperCase()}\r\n          </Typography>\r\n          <Typography variant=\"h2\" color=\"textSecondary\" component=\"h2\">\r\n            {val.toLocaleString('ru-RU')}\r\n          </Typography>\r\n        </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Cards\r\n","import React, {useEffect, useState} from 'react'\r\nimport {fetchData} from '../../utils/fetchData'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nconst dataForChart = { \r\n    datasets: [\r\n        {\r\n            label: 'ПОДТВЕРЖДЕННО',\r\n            backgroundColor: 'rgba(48,63,159, 0.3)',\r\n            borderColor: '#303F9F',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: '#1A237E',\r\n        },\r\n        {\r\n            label: 'СМЕРТЕЙ',\r\n            backgroundColor: 'rgba(255,82,82, 0.3)',\r\n            borderColor: '#000',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n            hoverBorderColor: 'rgba(255,99,132,1)',\r\n        }\r\n    ]\r\n}\r\n\r\nconst Chart = () => {\r\n    const [labels, setLabels] = useState([])\r\n    const [confirmed, setConfirmed] = useState('')\r\n    const [deaths, setDeaths] = useState('')\r\n    useEffect(() => {\r\n        const getDailyData = async () => {\r\n            const response = await fetchData('https://covid19.mathdro.id/api/daily')\r\n            setLabels(response.map(({reportDate}) => reportDate))\r\n            setConfirmed(response.map(({totalConfirmed}) => totalConfirmed))\r\n            setDeaths(response.map(({deaths}) => deaths.total))\r\n        }\r\n        getDailyData()\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n           <Line \r\n            data={() => {\r\n                dataForChart.labels = labels\r\n                dataForChart.datasets[0].data = confirmed\r\n                dataForChart.datasets[1].data = deaths\r\n                return dataForChart\r\n            }}\r\n            height={500}\r\n            options={{ maintainAspectRatio: false }}\r\n           /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React, {useState, useEffect} from 'react'\r\nimport {fetchData} from '../../utils/fetchData'\r\nimport {InputLabel, Select, MenuItem, Grid} from '@material-ui/core'\r\n\r\nconst ListOfCountries = ({selectHandler, currentCountry}) => {\r\n    const [countries, setCountries] = useState([])\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const response = await fetchData('https://covid19.mathdro.id/api/countries')\r\n            const arrOfCountries = response.countries.map(el => el.name)\r\n            setCountries(arrOfCountries)\r\n        }\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n\r\n            <Grid container spacing={3} direction=\"row\" alignItems='center' justify=\"center\">\r\n                <Grid item xs={3}>\r\n                    <InputLabel id=\"selectCountry\" style={{textAlign: 'center'}}>Select Country</InputLabel>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Select value={currentCountry} labelId=\"selectCountry\" onChange={selectHandler}>\r\n                        <MenuItem value=\"All\" key='all'>All</MenuItem>\r\n                        {countries.map((el, idx) => <MenuItem value={el} key={idx}>{el}</MenuItem>)}\r\n                    </Select>\r\n                </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default ListOfCountries\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Bar} from 'react-chartjs-2'\r\nimport {fetchData} from '../../utils/fetchData'\r\n\r\nconst dataForChart = {\r\n    datasets: [\r\n        {\r\n            backgroundColor: 'rgba(0,0,255, 0.3)',\r\n            borderColor: 'rgba(0,0,255, 1)',\r\n            borderWidth: 2,\r\n            label: 'ПОДТВЕРЖДЕННО'\r\n        },\r\n        {\r\n            backgroundColor: 'rgba(0,128,0, 0.3)',\r\n            borderColor: 'rgba(0,150,0, 1)',\r\n            borderWidth: 2,\r\n            label: 'ВЫЗДОРОВЕВШИЕ'\r\n        },\r\n        {\r\n            backgroundColor: 'rgba(255,13,13, 0.3)',\r\n            borderColor: 'rgba(255,13,13, 1)',\r\n            borderWidth: 2,\r\n            label: 'СМЕРТЕЙ'\r\n        }\r\n    ]\r\n}\r\n\r\nconst chartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n        yAxes: [\r\n            {\r\n                ticks: {\r\n                    suggestedMin: 0\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nconst BarChart = ({currentCountry}) => {\r\n    const [confirmed, setConfirmed] = useState('')\r\n    const [recovered, setRecovered] = useState('')\r\n    const [deaths, setDeaths] = useState('')\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const {confirmed, recovered, deaths} = await fetchData(`https://covid19.mathdro.id/api/countries/${currentCountry}`);\r\n            setConfirmed(confirmed.value)\r\n            setRecovered(recovered.value)\r\n            setDeaths(deaths.value)\r\n        }\r\n        getData()\r\n    }, [deaths, recovered, confirmed, currentCountry])\r\n    \r\n    return (\r\n        <>\r\n            <Bar data={() => {\r\n                dataForChart.datasets[0].data = [confirmed]\r\n                dataForChart.datasets[1].data = [recovered]\r\n                dataForChart.datasets[2].data = [deaths]\r\n                return dataForChart\r\n            }\r\n            } options={chartOptions}/>\r\n            {console.log('death:', deaths, 'confirmed:', confirmed, 'recovered;', recovered)}\r\n        </> \r\n    )\r\n}\r\n\r\nexport default BarChart\r\n","import React, {useEffect, useState} from 'react';\nimport {fetchData} from './utils/fetchData'\nimport Header from './components/Header/Header';\nimport Card from './components/Card/Card'\nimport { Grid, Container } from '@material-ui/core';\nimport LineChart from './components/LineChart/LineChart'\nimport ListOfCountries from './components/ListOfCountries/ListOfCountries';\nimport BarChart from './components/BarChart/BarChart'\nimport './App.css';\n\nfunction App() {\n  const [confirmed, setCorfimed] = useState('')\n  const [recovered, setRecovered] = useState('')\n  const [deaths, setDeaths] = useState('')\n  const [currentCountry, setCurrentCountry] = useState('All')\n\n  useEffect(() => {\n    setCurrentCountry(localStorage.getItem('country') || 'All')\n    const getData = async () => {\n      const {confirmed, recovered, deaths} = await fetchData('https://covid19.mathdro.id/api')\n      setCorfimed(confirmed.value)\n      setRecovered(recovered.value)\n      setDeaths(deaths.value)\n    }\n    getData()\n  }, [])\n\n  const selectHandler = e => {\n    e.preventDefault()\n    setCurrentCountry(e.target.value)\n    localStorage.setItem('country', e.target.value)\n}\n  return (\n    <>\n      <Header/>\n        <ListOfCountries selectHandler={selectHandler} currentCountry={currentCountry}/>\n      <Grid container spacing={2} className=\"cards-block\">\n        <Card name=\"подтвержденно\" val={confirmed} border=\"blue\" />\n        <Card name=\"выздоровевшие\" val={recovered} border=\"green\"/>\n        <Card name=\"смертей\" val={deaths} border=\"red\"/>\n      </Grid>\n      <Container>\n        {\n          currentCountry.toLowerCase() === 'all' ?\n          <LineChart mainData={[confirmed, deaths, recovered]}/> :\n          <BarChart currentCountry={currentCountry}/>\n          \n        }\n      </Container>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2KVdL\"};"],"sourceRoot":""}